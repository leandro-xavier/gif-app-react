{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","console","log","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"8MAGMA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OAEQ,sBAAMC,SAhBO,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,KAEdO,QAAQC,IAAI,aAQZ,SACA,uBACAC,KAAK,OACLC,MAAOX,EACPY,SAxBkB,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,aA+B/Bd,EAAYiB,WAAa,CACrBhB,cAAciB,IAAUC,KAAKC,YAGlBpB,Q,QC7BAqB,EAZK,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAI7B,OAFJb,QAAQC,IAAI,CAACU,KAAIC,QAAOC,QAGhB,sBAAKC,UAAU,oCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCTHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,0FAC4EO,UAAUF,GADtF,sBAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAYhBY,GAZgB,4CAAH,sDC6BLK,EAzBC,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAId,ECLwB,SAACA,GACzB,MAA0B3B,mBAAS,CAC/BiC,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGtB,CAACb,IAEGc,EDXyBK,CAAanB,GAAhCU,EAAb,EAAOJ,KAAcO,EAArB,EAAqBA,QAIrB,OACI,qCACA,oBAAIjB,UAAU,oCAAd,SAAmDI,IAElDa,GAAW,mBAAGjB,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SACQc,EAAOF,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEIA,GADCA,EAAIhB,aEMb2B,EAvBM,WAEjB,MAAmC/C,mBAAS,CAAC,cAA7C,mBAAOgD,EAAP,KAAmBjD,EAAnB,KAGA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEOiD,EAAWb,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCb5BsB,IAASC,OAEN,cAAC,EAAD,IACDC,SAASC,eAAe,W","file":"static/js/main.0399b008.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault(); //este se coloca para prevenir que el navegador refresque la pagina\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [ inputValue, ...cats])\r\n            setInputValue('');\r\n        }else{\r\n            console.log('esta mal')\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n      \r\n            <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n            </form>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nAddCategory.protoTypes = {\r\n    setCategories:PropTypes.func.isRequired\r\n} \r\n\r\nexport default AddCategory\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n\r\nconsole.log({id, title, url});\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=PANiSKCdIPU6S5kqAHu52Oto7t5SVAfn&q=${encodeURI(category)}&limit=10`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\nreturn gifs;\r\n}","import React from 'react';\r\nimport GifGridItem from './GifGridItem';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n   // const [images, setImages] = useState([]);\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__bounce\">{category}</h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n\r\n        <div className=\"card-grid\">\r\n               {images.map( img => (\r\n                   <GifGridItem \r\n                   key={img.id}\r\n                   {...img}/>\r\n               ))}\r\n        </div> \r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] =useState(['One Punch']);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n               {\r\n                   categories.map(category => \r\n                       <GifGrid \r\n                       key={category}\r\n                       category={category}/>\r\n                   )\r\n               }\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n  \n   <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}